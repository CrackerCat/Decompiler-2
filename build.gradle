plugins {
    id("java")
    id("io.freefair.lombok") version "6.5.1"
    id("org.openjfx.javafxplugin") version "0.0.13"
}

group = "com.hohltier"
version = "0.8.0"

repositories {
    mavenCentral()
    maven { url("https://maven.quiltmc.org/repository/release/") }
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

javafx {
    version = "${JavaVersion.VERSION_17}.0.7"
    modules("javafx.base", "javafx.controls", "javafx.graphics", "javafx.swing")
}

dependencies {
    implementation("org.jetbrains:annotations:23.1.0")
    implementation("info.picocli:picocli:4.7.3")
    implementation("com.fasterxml.jackson.core:jackson-core:2.14.1")
    implementation("com.fasterxml.jackson.core:jackson-databind:2.14.1")
    implementation("org.slf4j:slf4j-simple:2.0.6")
    implementation("org.reflections:reflections:0.10.2")
    implementation("org.ow2.asm:asm:9.4")
    implementation("org.ow2.asm:asm-util:9.4")
    implementation("org.quiltmc:quiltflower:1.9.0")
    implementation("com.formdev:flatlaf:3.0")
    implementation("org.fxmisc.richtext:richtextfx:0.11.0")
    implementation("io.github.classgraph:classgraph:4.8.157")
    implementation group: 'de.jflex', name: 'jflex', version: '1.9.1'
    implementation("org.openjfx:javafx-base:${javafx.version}:win")
    implementation("org.openjfx:javafx-base:${javafx.version}:mac-aarch64")
    implementation("org.openjfx:javafx-base:${javafx.version}:linux")
    implementation("org.openjfx:javafx-controls:${javafx.version}:win")
    implementation("org.openjfx:javafx-controls:${javafx.version}:mac-aarch64")
    implementation("org.openjfx:javafx-controls:${javafx.version}:linux")
    implementation("org.openjfx:javafx-graphics:${javafx.version}:win")
    implementation("org.openjfx:javafx-graphics:${javafx.version}:mac-aarch64")
    implementation("org.openjfx:javafx-graphics:${javafx.version}:linux")
    implementation("org.openjfx:javafx-swing:${javafx.version}:win")
    implementation("org.openjfx:javafx-swing:${javafx.version}:mac-aarch64")
    implementation("org.openjfx:javafx-swing:${javafx.version}:linux")
    annotationProcessor("info.picocli:picocli-codegen:4.7.3")
}

    processResources {
        filesMatching("application.properties") {
            expand(project.properties)
        }
    }

    jar {
        archiveBaseName.set(project.name.toLowerCase())
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        manifest.attributes["Main-Class"] = "${project.group}.${project.name.toLowerCase()}.Main"
        manifest.attributes["Agent-Class"] = "${project.group}.${project.name.toLowerCase()}.Agent"
        from { configurations.compileClasspath.collect { it.directory ? it : zipTree(it) } }
    }

tasks.register("testJar", Jar) {
    archiveFileName.set("test.jar")
    manifest.attributes["Main-Class"] = "${project.group}.${project.name.toLowerCase()}.Main"
    from(sourceSets.test.output)
}